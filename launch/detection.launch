<launch>
    
    <arg name="robotname" default="p1" />
    <arg name="planname" default="stop" />
    <arg name="use_gui" default="false" />

    <include file="$(find custom_worlds)/launch/tiago_navigation.launch"></include>
    <!-- <include file="$(find obstacle_avoidance)/launch/obstacle_avoidance.launch"></include> -->

    <!-- Load the longroom tables and motions data into the parameter server -->
    <!-- <rosparam command="load" file="$(find lasr_sciroc_p1)/config/longroom.yaml" /> -->
    <rosparam command="load" file="$(find lasr_sciroc_p1)/config/locations.yaml" />
    <rosparam command="load" file="$(find lasr_sciroc_p1)/config/motions.yaml" />
    <rosparam command="load" file="$(find lasr_sciroc_p1)/config/detect.yaml" />

    <arg name="sensor"                     default="/xtion/depth_registered/points"  />
    <arg name="resolution"                 default="32"  />

    <node name="DetectCustomer" pkg="pcl_segmentation" type="DetectCustomer" output="screen">
        <remap from="sensor"                     to="$(arg sensor)"     />
        <param name="resolution"          type="double" value="$(arg resolution)"  />
    </node>

    <group ns="$(arg robotname)">
        <param name="robot_name" value="$(arg robotname)" />
        <param name="tf_prefix" value="$(arg robotname)" />

        <node pkg="pnp_ros" type="pnp_node" name="pnp" args="" output="screen">
            <param name="plan_folder" value="$(find lasr_sciroc_p1)/plans/" />
            <param name="current_plan" value="$(arg planname)" />
            <param name="use_java_connection" value="$(arg use_gui)" />
        </node>

	    <node pkg="lasr_pnp_bridge" type="lasr_pnp_bridge_node" name="lasr_pnp_bridge" args="" output="screen" />

	    <node pkg="lasr_sciroc_p1" type="detection_server.py" name="DetectionServer" args="" output="screen" /> 
    </group>

</launch>