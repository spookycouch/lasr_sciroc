<launch>
    
    <arg name="robotname" default="sciroc" />
    <arg name="planname" default="stop" />
    <arg name="use_gui" default="false" />

    <!-- <include file="$(find custom_worlds)/launch/tiago_navigation.launch"></include> -->
    <!-- <include file="$(find obstacle_avoidance)/launch/obstacle_avoidance.launch"></include> -->

    <!-- Load the longroom tables and motions data into the parameter server -->
    <rosparam command="load" file="$(find lasr_sciroc)/config/longroom.yaml" />
    <rosparam command="load" file="$(find lasr_sciroc)/config/HAL9000.yaml" />
    <!-- <rosparam command="load" file="$(find lasr_sciroc)/config/locations.yaml" /> -->
    <rosparam command="load" file="$(find lasr_sciroc)/config/motions.yaml" />

    <!-- <node pkg="object_detection_yolo_opencv4" type="count_objects_server.py" name="count_objects" args="" output="screen" /> -->

    <node pkg="lasr_object_detection_yolo" type="object_detection_server.py" name="yolo_detection" args="" output="screen" />
    <node pkg="lasr_img_depth_mask" type="depth_mask_server.py" name="depth_mask" args="" output="screen" />

    <group ns="$(arg robotname)">
        <param name="robot_name" value="$(arg robotname)" />
        <param name="tf_prefix" value="$(arg robotname)" />

        <node pkg="pnp_ros" type="pnp_node" name="pnp" args="" output="screen">
            <param name="plan_folder" value="$(find lasr_sciroc)/plans/" />
            <param name="current_plan" value="$(arg planname)" />
            <param name="use_java_connection" value="$(arg use_gui)" />
        </node>

	    <node pkg="lasr_pnp_bridge" type="lasr_pnp_bridge_node" name="lasr_pnp_bridge" args="" output="screen" />

	    <!-- <node pkg="lasr_sciroc" type="lasr_sciroc_p1" name="P1Server" args="" output="screen" />  -->
        
        <node pkg="lasr_sciroc" type="lasr_sciroc_p2" name="P2Server" args="" output="screen" /> 
    </group>

</launch>
